version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.0

executors:
  node-executor:
    docker:
      - image: cimg/node:18.18
    working_directory: ~/app

jobs:
  install:
    executor: node-executor
    steps:
      - checkout
      - run: npm ci
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  lint:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run lint
      - run: npm run format:check

  test:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test

  docker-build-and-push:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Log in to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Build and push Docker image
          command: |
            IMAGE_NAME="mrlamar237/cicd-pipeline-demo"
            docker build -t ${IMAGE_NAME}:latest .
            docker push ${IMAGE_NAME}:latest

  deploy-to-aws-elastic-beanstalk:
    executor: node-executor
    parameters:
      eb_application_name:
        type: string
        description: "Name of the Elastic Beanstalk application"
      eb_environment_name:
        type: string
        description: "Name of the Elastic Beanstalk environment"
      s3_bucket_name:
        type: string
        description: "S3 bucket to store deployment artifacts"
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Create Dockerrun.aws.json
          command: |
            # This file tells Elastic Beanstalk how to run your Docker image
            cat <<EOF > Dockerrun.aws.json
            {
              "AWSEBDockerrunVersion": "1",
              "Image": {
                "Name": "mrlamar237/cicd-pipeline-demo:latest",
                "Update": "true"
              },
              "Ports": [
                {
                  "ContainerPort": 3000
                }
              ],
              "Volumes": [],
              "Logging": "/var/log/nginx"
            }
            EOF
      - run:
          name: Deploy to AWS Elastic Beanstalk
          command: |
            # ESCAPED: Use '\<<' to escape the literal '<<' characters
            APP_NAME="\<< parameters.eb_application_name >>"
            ENV_NAME="\<< parameters.eb_environment_name >>"
            S3_BUCKET="\<< parameters.s3_bucket_name >>"
            VERSION_LABEL="app-$(date +%s)-${CIRCLE_SHA1}"

            echo "Packaging deployment artifact..."
            zip -r deploy.zip . -x "*.git*" "node_modules/*"

            echo "Uploading deploy.zip to S3://${S3_BUCKET}/${APP_NAME}/${VERSION_LABEL}.zip"
            aws s3 cp deploy.zip s3://${S3_BUCKET}/${APP_NAME}/${VERSION_LABEL}.zip

            echo "Creating new application version in Elastic Beanstalk..."
            aws elasticbeanstalk create-application-version \
              --application-name ${APP_NAME} \
              --version-label ${VERSION_LABEL} \
              --source-bundle S3Bucket=${S3_BUCKET},S3Key=${APP_NAME}/${VERSION_LABEL}.zip \
              --auto-create-application

            echo "Updating Elastic Beanstalk environment ${ENV_NAME} with version ${VERSION_LABEL}..."
            aws elasticbeanstalk update-environment \
              --environment-name ${ENV_NAME} \
              --version-label ${VERSION_LABEL}

            echo "Deployment to AWS Elastic Beanstalk initiated for application: ${APP_NAME}, environment: ${ENV_NAME}"
            echo "Monitor deployment status in AWS Elastic Beanstalk console."


workflows:
  version: 2
  build-test-deploy:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - lint
      - docker-build-and-push:
          requires:
            - test
      - deploy-to-aws-elastic-beanstalk:
          requires:
            - docker-build-and-push
          filters:
            branches:
              only:
                - master
          eb_application_name: "cicd-pipeline-demo-app"
          eb_environment_name: "Cicd-pipeline-demo-app-env" # Updated value
          s3_bucket_name: "mrlamar237-cicd-eb-deployments"
